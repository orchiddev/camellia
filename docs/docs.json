{"meta":{"generator":"0.9.0","format":20,"date":1594342051293},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"<br>\r\n<div align=\"center\">\r\n    <img src=\"https://github.com/camelliajs/camellia/blob/master/icons/camellia.png?raw=true\" height=\"128\" width=\"128\"/>\r\n    <h2>Camellia</h2>\r\n    <h6><i>- The respectful Node.js Discord library -</i></h6>\r\n</div>\r\n\r\n# Welcome!\r\nHey there, welcome to the documentation of the [camellia](https://github.com/camelliajs/camellia) discord library! Here you'll find all the necessary information for utilizing the library.\r\n\r\n## About\r\nCamellia is a Discord library built in JavaScript for practical and advanced measures, enforcing and upholding performance and speed over true consistency, built in a way like [C](https://en.wikipedia.org/wiki/C_(programming_language)) is. Rather than relying heavily on other modules, it creates its own advantages in performance by using home made and native solutions. *\"Native\"* in our sense is defined as \"utilizing its own code rather than external modules\", preferrably using our own solutions than others, to optimize and maintain our iterations of such.\r\n\r\nCamellia aims to be feature-rich, while balancing abstraction and performance along in the mix. Utilizing promises for prominent speeds with responses, and lessening the overall load on a developer by providing advanced coverage of the Discord API and it's features.\r\n\r\nIn short: This project aims to provide a viable and advanced alternative to [discord.js](https://github.com/discordjs/discord.js) and [eris](https://github.com/abalabahaha/eris), much like when [discordie](https://github.com/qeled/discordie) was at it's prime.\r\n\r\n### Why use Camellia?\r\n- Object/Function-oriented calls\r\n- Performant and capable\r\n    - Fitted heavily for server-usage\r\n- Advanced features\r\n- Easy control over code\r\n- Asynchrous methods\r\n\r\n## Installation\r\n*Node.js v14 or higher is required for this library.*\r\n\r\nAs this library is in heavy beta, the only true way to install it is through it's development builds.\r\n```\r\nnpm i camelliajs/camellia\r\n```\r\n#### Optional Packages\r\nAs of writing this, there are currently no optional packages. Most of the would-be optional packages are necessities towards building speed with the library.\r\n\r\n## Example code\r\n```js\r\nconst Camellia = require(\"camellia\");\r\nconst bot = new Camellia.Client();\r\n\r\nclient.on(\"ready\", () => {\r\n    console.log(\"Ready for usage!\");\r\n});\r\n\r\nclient.on(\"message\", (msg) => {\r\n    if (msg.content === \"!ping\") {\r\n        msg.channel.send(\"Pong!\");\r\n    }\r\n});\r\n\r\nclient.connect(\"token\");\r\n```\r\n\r\n## Links\r\n* [Discord](https://discord.gg/CBNJ9ww)\r\n* [Github](https://github.com/camelliajs/camellia) ([Organization](https://github.com/camelliajs))\r\n* [Related Libraries](http://discordapi.com/unofficial/libs.html)","path":"docs/general/welcome.md"}}}},"classes":[{"name":"BaseClient","description":"The basic base to every client in the library.","extends":[[["EventEmitter"]]],"props":[{"name":"timeouts","description":"Active timeouts for the client created by {@link BaseClient#setTimeout}.","type":[[["Set","<"],["Timeout",">"]]],"meta":{"line":18,"file":"BaseClient.js","path":"lib/client"}},{"name":"intervals","description":"Active intervals for the client created by {@link BaseClient#setInterval}.","type":[[["Set","<"],["Timeout",">"]]],"meta":{"line":24,"file":"BaseClient.js","path":"lib/client"}},{"name":"immediates","description":"Active immediates for the client created by {@link BaseClient#setImmediate}.","type":[[["Set","<"],["Immediate",">"]]],"meta":{"line":30,"file":"BaseClient.js","path":"lib/client"}},{"name":"options","description":"The options belonging to the client.","type":[[["ClientOptions"]]],"meta":{"line":36,"file":"BaseClient.js","path":"lib/client"}},{"name":"rest","description":"The HTTP manager for the client.","access":"private","type":[[["RESTManager"]]],"meta":{"line":43,"file":"BaseClient.js","path":"lib/client"}}],"methods":[{"name":"setTimeout","description":"Sets a timeout that will automatically end if the client is destroyed.","params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"delay","description":"Time to wait before running (in milliseconds)","type":[[["number"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Timeout"]]],"meta":{"line":65,"file":"BaseClient.js","path":"lib/client"}},{"name":"clearTimeout","description":"Clears a timeout.","params":[{"name":"timeout","description":"Timeout to cancel","type":[[["Timeout"]]]}],"meta":{"line":79,"file":"BaseClient.js","path":"lib/client"}},{"name":"setInterval","description":"Sets an interval that will automatically end if the client is destroyed.","params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"delay","description":"Time to wait before executing (in milliseconds)","type":[[["number"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Timeout"]]],"meta":{"line":91,"file":"BaseClient.js","path":"lib/client"}},{"name":"clearInterval","description":"Clears an interval;","params":[{"name":"interval","description":"Interval to cancel","type":[[["Timeout"]]]}],"meta":{"line":105,"file":"BaseClient.js","path":"lib/client"}},{"name":"setImmediate","description":"Sets an immediate that will automatically end if the client is destroyed.","params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Immediate"]]],"meta":{"line":116,"file":"BaseClient.js","path":"lib/client"}},{"name":"clearImmediate","description":"Clears an immediate.","params":[{"name":"immediate","description":"Immediate to cancel","type":[[["Immediate"]]]}],"meta":{"line":126,"file":"BaseClient.js","path":"lib/client"}}],"meta":{"line":11,"file":"BaseClient.js","path":"lib/client"}},{"name":"Client","description":"The main client for using an application, or a token.","extends":[[["BaseClient"]]],"construct":{"name":"Client","params":[{"name":"options","description":"Options for the client.","optional":true,"type":[[["ClientOptions"]]]}]},"props":[{"name":"ws","description":"The WS manager to this client.","type":[[["WebSocketManager"]]],"meta":{"line":23,"file":"Client.js","path":"lib/client"}},{"name":"users","description":"A cached collection of {@link User}'s","type":[[["Manager","<"],["User",">"]]],"meta":{"line":29,"file":"Client.js","path":"lib/client"}},{"name":"guilds","description":"A cached collection of {@link Guild}'s","type":[[["Manager","<"],["Guild",">"]]],"meta":{"line":35,"file":"Client.js","path":"lib/client"}},{"name":"channels","description":"A cached collection of {@link Channel}'s","type":[[["Manager","<"],["Channel",">"]]],"meta":{"line":41,"file":"Client.js","path":"lib/client"}},{"name":"timeouts","description":"Active timeouts for the client created by {@link BaseClient#setTimeout}.","type":[[["Set","<"],["Timeout",">"]]],"meta":{"line":18,"file":"BaseClient.js","path":"lib/client"}},{"name":"intervals","description":"Active intervals for the client created by {@link BaseClient#setInterval}.","type":[[["Set","<"],["Timeout",">"]]],"meta":{"line":24,"file":"BaseClient.js","path":"lib/client"}},{"name":"immediates","description":"Active immediates for the client created by {@link BaseClient#setImmediate}.","type":[[["Set","<"],["Immediate",">"]]],"meta":{"line":30,"file":"BaseClient.js","path":"lib/client"}},{"name":"options","description":"The options belonging to the client.","type":[[["ClientOptions"]]],"meta":{"line":36,"file":"BaseClient.js","path":"lib/client"}},{"name":"rest","description":"The HTTP manager for the client.","access":"private","type":[[["RESTManager"]]],"meta":{"line":43,"file":"BaseClient.js","path":"lib/client"}}],"methods":[{"name":"connect","description":"Connects to the gateway.","async":true,"returns":[[["null"]]],"meta":{"line":48,"file":"Client.js","path":"lib/client"}},{"name":"setTimeout","description":"Sets a timeout that will automatically end if the client is destroyed.","inherits":"BaseClient#setTimeout","inherited":true,"params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"delay","description":"Time to wait before running (in milliseconds)","type":[[["number"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Timeout"]]],"meta":{"line":65,"file":"BaseClient.js","path":"lib/client"}},{"name":"clearTimeout","description":"Clears a timeout.","inherits":"BaseClient#clearTimeout","inherited":true,"params":[{"name":"timeout","description":"Timeout to cancel","type":[[["Timeout"]]]}],"meta":{"line":79,"file":"BaseClient.js","path":"lib/client"}},{"name":"setInterval","description":"Sets an interval that will automatically end if the client is destroyed.","inherits":"BaseClient#setInterval","inherited":true,"params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"delay","description":"Time to wait before executing (in milliseconds)","type":[[["number"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Timeout"]]],"meta":{"line":91,"file":"BaseClient.js","path":"lib/client"}},{"name":"clearInterval","description":"Clears an interval;","inherits":"BaseClient#clearInterval","inherited":true,"params":[{"name":"interval","description":"Interval to cancel","type":[[["Timeout"]]]}],"meta":{"line":105,"file":"BaseClient.js","path":"lib/client"}},{"name":"setImmediate","description":"Sets an immediate that will automatically end if the client is destroyed.","inherits":"BaseClient#setImmediate","inherited":true,"params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Immediate"]]],"meta":{"line":116,"file":"BaseClient.js","path":"lib/client"}},{"name":"clearImmediate","description":"Clears an immediate.","inherits":"BaseClient#clearImmediate","inherited":true,"params":[{"name":"immediate","description":"Immediate to cancel","type":[[["Immediate"]]]}],"meta":{"line":126,"file":"BaseClient.js","path":"lib/client"}}],"events":[{"name":"guildCreate","description":"Emitted whenever the client joins a guild.","params":[{"name":"guild","description":"The guild joined.","type":[[["Guild"]]]}],"meta":{"line":17,"file":"GUILD_CREATE.js","path":"lib/client/ws/events"}},{"name":"message","description":"Emitted when a message is sent to the client","params":[{"name":"message","description":"The message sent to the client.","type":[[["Message"]]]}],"meta":{"line":10,"file":"MESSAGE_CREATE.js","path":"lib/client/ws/events"}},{"name":"ready","description":"Emitted when the client is ready for usage.","meta":{"line":217,"file":"WebSocketManager.js","path":"lib/client/ws"}}],"meta":{"line":16,"file":"Client.js","path":"lib/client"}},{"name":"WebhookReciever","description":"The reciever for webhook events.","extends":[[["EventEmitter"]]],"access":"private","props":[{"name":"client","description":"The client that created this reviever.","type":[[["WebhookClient"]]],"meta":{"line":18,"file":"WebhookReciever.js","path":"lib/client/webhook"}},{"name":"server","description":"The HTTP server behind the reciever.","type":[[["httpServer"]]],"meta":{"line":24,"file":"WebhookReciever.js","path":"lib/client/webhook"}}],"methods":[{"name":"handle","description":"Handles a message from the server.","access":"private","params":[{"name":"req","description":"The incoming request.","type":[[["IncomingMessage"]]]},{"name":"res","description":"The response to handle.","type":[[["ServerResponse"]]]}],"meta":{"line":37,"file":"WebhookReciever.js","path":"lib/client/webhook"}},{"name":"send","description":"Ends a response.","access":"private","params":[{"name":"res","description":"The response to end.","type":[[["ServerResponse"]]]},{"name":"data","description":"The data to end with","type":[[["Response"]]]}],"meta":{"line":128,"file":"WebhookReciever.js","path":"lib/client/webhook"}}],"events":[{"name":"request","description":"A request from the http server, as to be sent to the webhook client.","params":[{"name":"message","description":"The message to send.","type":[[["RecieverMessage"]]]}],"meta":{"line":77,"file":"WebhookReciever.js","path":"lib/client/webhook"}}],"meta":{"line":11,"file":"WebhookReciever.js","path":"lib/client/webhook"}},{"name":"WebhookClient","description":"A client to access a webhook, and send data over it.","extends":[[["BaseClient"]]],"construct":{"name":"WebhookClient","params":[{"name":"id","description":"The ID of the webhook, or a URL belonging to one. The multiple object types exist because this class has more than one constructor.","type":[[["string"]],[["Snowflake"]]]},{"name":"token","description":"The token of the webhook, or options for a webhook. The multiple object types exist because this class has more than one constructor.","type":[[["string"]],[["WebhookClientOptions"]]]},{"name":"options","description":"The options to the embed, substituted for `token` if a URL is provided instead.","optional":true,"default":"{}","nullable":true,"type":[[["WebhookClientOptions"]]]}]},"props":[{"name":"id","description":"The ID of the webhook this client utilizes.","type":[[["Snowflake"]]],"meta":{"line":29,"file":"WebhookClient.js","path":"lib/client"}},{"name":"token","description":"The token of the webhook this client utilizes.","type":[[["string"]]],"meta":{"line":35,"file":"WebhookClient.js","path":"lib/client"}},{"name":"webhook","description":"The webhook bound to this client","type":[[["Webhook"]]],"meta":{"line":47,"file":"WebhookClient.js","path":"lib/client"}},{"name":"options","description":"The options belonging uniquely to the webhook client.","type":[[["WebhookClientOptions"]]],"meta":{"line":54,"file":"WebhookClient.js","path":"lib/client"}},{"name":"reciever","description":"The reciever to HTTP requests.","access":"private","type":[[["WebhookReciever"]]],"meta":{"line":106,"file":"WebhookClient.js","path":"lib/client"}},{"name":"timeouts","description":"Active timeouts for the client created by {@link BaseClient#setTimeout}.","type":[[["Set","<"],["Timeout",">"]]],"meta":{"line":18,"file":"BaseClient.js","path":"lib/client"}},{"name":"intervals","description":"Active intervals for the client created by {@link BaseClient#setInterval}.","type":[[["Set","<"],["Timeout",">"]]],"meta":{"line":24,"file":"BaseClient.js","path":"lib/client"}},{"name":"immediates","description":"Active immediates for the client created by {@link BaseClient#setImmediate}.","type":[[["Set","<"],["Immediate",">"]]],"meta":{"line":30,"file":"BaseClient.js","path":"lib/client"}},{"name":"rest","description":"The HTTP manager for the client.","access":"private","type":[[["RESTManager"]]],"meta":{"line":43,"file":"BaseClient.js","path":"lib/client"}}],"methods":[{"name":"send","description":"Sends a message to the webhook.","params":[{"name":"content","description":"The message to send.","type":[[["MessageResolvable"]]]}],"meta":{"line":82,"file":"WebhookClient.js","path":"lib/client"}},{"name":"_create","description":"Creates a webhook client based off a URL. Acts as a second constructor.","access":"private","params":[{"name":"url","description":"A URL belonging to the embed.","type":[[["string"]]]},{"name":"options","description":"The options of the webhook.","nullable":true,"type":[[["options"]]]}],"returns":[[["null"]]],"meta":{"line":93,"file":"WebhookClient.js","path":"lib/client"}},{"name":"setTimeout","description":"Sets a timeout that will automatically end if the client is destroyed.","inherits":"BaseClient#setTimeout","inherited":true,"params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"delay","description":"Time to wait before running (in milliseconds)","type":[[["number"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Timeout"]]],"meta":{"line":65,"file":"BaseClient.js","path":"lib/client"}},{"name":"clearTimeout","description":"Clears a timeout.","inherits":"BaseClient#clearTimeout","inherited":true,"params":[{"name":"timeout","description":"Timeout to cancel","type":[[["Timeout"]]]}],"meta":{"line":79,"file":"BaseClient.js","path":"lib/client"}},{"name":"setInterval","description":"Sets an interval that will automatically end if the client is destroyed.","inherits":"BaseClient#setInterval","inherited":true,"params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"delay","description":"Time to wait before executing (in milliseconds)","type":[[["number"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Timeout"]]],"meta":{"line":91,"file":"BaseClient.js","path":"lib/client"}},{"name":"clearInterval","description":"Clears an interval;","inherits":"BaseClient#clearInterval","inherited":true,"params":[{"name":"interval","description":"Interval to cancel","type":[[["Timeout"]]]}],"meta":{"line":105,"file":"BaseClient.js","path":"lib/client"}},{"name":"setImmediate","description":"Sets an immediate that will automatically end if the client is destroyed.","inherits":"BaseClient#setImmediate","inherited":true,"params":[{"name":"fn","description":"Function to execute","type":[[["function"]]]},{"name":"args","description":"Arguments for the function","variable":true,"type":[["*"]]}],"returns":[[["Immediate"]]],"meta":{"line":116,"file":"BaseClient.js","path":"lib/client"}},{"name":"clearImmediate","description":"Clears an immediate.","inherits":"BaseClient#clearImmediate","inherited":true,"params":[{"name":"immediate","description":"Immediate to cancel","type":[[["Immediate"]]]}],"meta":{"line":126,"file":"BaseClient.js","path":"lib/client"}}],"events":[{"name":"message","description":"The message from the reciever.","params":[{"name":"message","description":"The message from the receiver.","type":[[["RecieverMessage"]]]}],"meta":{"line":68,"file":"WebhookClient.js","path":"lib/client"}}],"meta":{"line":20,"file":"WebhookClient.js","path":"lib/client"}},{"name":"MessageHandler","description":"The message handler belonging to a manager, to decode all gateway messages, and hand them back.","access":"private","props":[{"name":"manager","description":"The shard manager that requires this handler","type":[[["WSManager"]]],"meta":{"line":15,"file":"MessageHandler.js","path":"lib/client/ws"}},{"name":"inflate","description":"The method to decompress data","nullable":true,"type":[[["Inflate"]]],"meta":{"line":21,"file":"MessageHandler.js","path":"lib/client/ws"}}],"methods":[{"name":"handle","description":"Handles and decodes a gateway message.","params":[{"name":"data","description":"The data sent from the gateway.","type":[[["Buffer"]]]}],"async":true,"meta":{"line":32,"file":"MessageHandler.js","path":"lib/client/ws"}},{"name":"pack","description":"Packs data to be sent.","params":[{"name":"data","type":[[["Buffer"]]]}],"meta":{"line":56,"file":"MessageHandler.js","path":"lib/client/ws"}}],"meta":{"line":10,"file":"MessageHandler.js","path":"lib/client/ws"}},{"name":"ShardRatelimit","description":"The manager to limit gateway requests. \rFor more information about Gateway Rate-limiting, visit {@link https://ptb.discord.com/developers/docs/topics/gateway#rate-limiting} for such.","access":"private","props":[{"name":"shard","description":"The shard that spawned this manager.","type":[[["WebSocketShard"]]],"meta":{"line":13,"file":"ShardRatelimit.js","path":"lib/client/ws"}},{"name":"queue","description":"The queue for requests.","type":[[["Array","<"],["Object",">"]]],"meta":{"line":19,"file":"ShardRatelimit.js","path":"lib/client/ws"}},{"name":"total","description":"The total requests allowed","type":[[["number"]]],"meta":{"line":25,"file":"ShardRatelimit.js","path":"lib/client/ws"}},{"name":"remaining","description":"The remaining requests allowed","type":[[["number"]]],"meta":{"line":31,"file":"ShardRatelimit.js","path":"lib/client/ws"}},{"name":"time","description":"The time (in milliseconds) for which {@link ShardRatelimit#remaining} gets reset.","type":[[["number"]]],"meta":{"line":37,"file":"ShardRatelimit.js","path":"lib/client/ws"}},{"name":"timer","description":"The timer for until {@link ShardRatelimit#remaining} gets reset.","type":[[["Timeout"]]],"meta":{"line":43,"file":"ShardRatelimit.js","path":"lib/client/ws"}}],"methods":[{"name":"handle","description":"Handles the current queue.","access":"private","meta":{"line":53,"file":"ShardRatelimit.js","path":"lib/client/ws"}},{"name":"destroy","description":"Destroys the current ratelimit manager.","returns":[[["null"]]],"meta":{"line":73,"file":"ShardRatelimit.js","path":"lib/client/ws"}}],"meta":{"line":8,"file":"ShardRatelimit.js","path":"lib/client/ws"}},{"name":"WebSocketManager","description":"The manager for all websocket connections, for sending and recieving all gateway events.","extends":[[["EventEmitter"]]],"props":[{"name":"client","description":"The client that instantiated this WebSocketManager","type":[[["Client"]]],"meta":{"line":38,"file":"WebSocketManager.js","path":"lib/client/ws"}},{"name":"handler","description":"The message handler belonging to this manager","type":[[["MessageHandler"]]],"meta":{"line":44,"file":"WebSocketManager.js","path":"lib/client/ws"}},{"name":"shards","description":"A collection of all the shards this WebSocket manager manages.","type":[[["Collection","<"],["number",", "],["WebSocketShard",">"]]],"meta":{"line":50,"file":"WebSocketManager.js","path":"lib/client/ws"}},{"name":"queue","description":"The queue for shards that need to be connected, or need to be reconnected","type":[[["Set","<"],["WebSocketShard",">"]]],"meta":{"line":56,"file":"WebSocketManager.js","path":"lib/client/ws"}},{"name":"status","description":"The status of this manager.","type":[[["Status"]]],"meta":{"line":62,"file":"WebSocketManager.js","path":"lib/client/ws"}},{"name":"destroyed","description":"Whether or not this manager is destroyed, or disposed of.","type":[[["boolean"]]],"meta":{"line":68,"file":"WebSocketManager.js","path":"lib/client/ws"}},{"name":"reconnecting","description":"Whether or not this manager is in the process of reconnecting a shard.","type":[[["boolean"]]],"meta":{"line":74,"file":"WebSocketManager.js","path":"lib/client/ws"}},{"name":"sessionStartLimit","description":"The current session limit","nullable":true,"type":[[["Object"]]],"props":[{"name":"total","description":"Total number of identifies available","type":[[["number"]]]},{"name":"remaining","description":"Number of identifies remaining","type":[[["number"]]]},{"name":"reset_after","description":"Number of milliseconds after which the limit resets","type":[[["number"]]]}],"meta":{"line":83,"file":"WebSocketManager.js","path":"lib/client/ws"}},{"name":"dataQueue","description":"The queue of data to handle.","type":[[["Set"]]],"meta":{"line":89,"file":"WebSocketManager.js","path":"lib/client/ws"}}],"methods":[{"name":"connect","description":"Begins a connection to the gateway.","access":"private","async":true,"meta":{"line":96,"file":"WebSocketManager.js","path":"lib/client/ws"}},{"name":"spawn","description":"Begins spawning shards, and the creation of them.","access":"private","async":true,"returns":[[["boolean"]]],"meta":{"line":131,"file":"WebSocketManager.js","path":"lib/client/ws"}},{"name":"_handleShardEvents","description":"Handle the events of a shard.","access":"private","params":[{"name":"shard","description":"The shard to handle the data of.","type":[[["Buffer"]]]}],"async":true,"meta":{"line":169,"file":"WebSocketManager.js","path":"lib/client/ws"}},{"name":"handle","description":"Handles sent data from the gateway.","access":"private","params":[{"name":"shard","description":"The shard to give data back to.","type":[["*"]]},{"name":"data","description":"The data to handle.","type":[["*"]]}],"returns":[[["boolean"]]],"meta":{"line":188,"file":"WebSocketManager.js","path":"lib/client/ws"}}],"meta":{"line":31,"file":"WebSocketManager.js","path":"lib/client/ws"}},{"name":"WebSocketShard","description":"A shard, or an instance of a client.","extends":[[["WebSocket"]]],"props":[{"name":"manager","description":"The manager that spanwed this shard","type":[[["WebSocketManager"]]],"meta":{"line":23,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"client","description":"The client belonging to the manager","type":[[["Client"]]],"meta":{"line":29,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"handler","description":"The message handler from the websocket manager.","type":[[["MessageHandler"]]],"meta":{"line":35,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"id","description":"The ID of the shard, as given by the manager","type":[[["number"]]],"meta":{"line":41,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"ratelimit","description":"The object data for queueing requests, and handing","type":[[["ShardRatelimit"]]],"meta":{"line":47,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"sequence","description":"The current sequence of the shard","type":[[["number"]]],"meta":{"line":53,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"heartbeatAcknowledged","description":"Whether or not the last heartbeat was acknowledged, or not.","access":"private","type":[[["boolean"]]],"meta":{"line":60,"file":"WebSocketShard.js","path":"lib/client/ws"}}],"methods":[{"name":"onmessage","description":"Handles incoming websocket data","access":"private","params":[{"name":"data","description":"The data from the websocket.","type":[[["Buffer"]]]}],"async":true,"meta":{"line":82,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"checkReady","description":"Checks whether the shard is fully ready, or not.","access":"private","meta":{"line":134,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"heartbeat","description":"The function to set a timer and send a heartbeat","access":"private","params":[{"name":"time","description":"The interval to send a heartbeat with.","type":[[["number"]]]}],"meta":{"line":158,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"sendHeartbeat","description":"Sends a heartbeat to the gateway.","access":"private","meta":{"line":175,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"identify","description":"Identifies the client on the connection.","access":"private","returns":[[["void"]]],"meta":{"line":191,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"identifyNewConnection","description":"Identifies the shard as a new connection on the gateway.","access":"private","meta":{"line":199,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"identifyResumed","description":"Resumes a closed session on the gateway.","access":"private","meta":{"line":218,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"send","description":"Handles the ratelimit queue and pushes data to it to be sent to the gateway.","access":"private","params":[{"name":"data","description":"The data to send.","type":[[["Object"]]]},{"name":"important","description":"Whether or not the data is important, and to put it at the start of the queue or not.","optional":true,"default":false,"type":[[["Object"]]]}],"meta":{"line":242,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"_send","description":"Sends data to the gateway.","access":"private","params":[{"name":"data","description":"The data to send.","type":[[["Object"]]]}],"meta":{"line":252,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"acknowledgeHeartbeat","description":"Acknowledges a heartbeat.","access":"private","meta":{"line":264,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"destroy","description":"Destroys the shard, and its connections.","params":[{"name":"options","description":"The options for destroying the shard.","optional":true,"default":"{}","type":[[["Object"]]]},{"name":"options.close","description":"The WS close code for destroying the shard.","optional":true,"default":1000,"type":[[["number"]]]},{"name":"options.reset","description":"Whether to reset the shard's data, or not.","optional":true,"default":false,"type":[[["boolean"]]]}],"meta":{"line":275,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"_cleanup","description":"Cleanups all listeners, and ends them.","access":"private","meta":{"line":314,"file":"WebSocketShard.js","path":"lib/client/ws"}}],"events":[{"name":"ready","description":"Emitted when the shard is connected to the gateway, but not fully ready yet.","meta":{"line":90,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"allReady","description":"Emitted when the shard is fully ready, and all of the guilds are added.","params":[{"name":"unavailableGuilds","description":"Set of unavailable guilds, if any","nullable":true,"type":[[["Set","<"],["string",">"]]]}],"meta":{"line":137,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"destroyed","description":"Emitted whenever a shard is proclaimed destroyed.","meta":{"line":290,"file":"WebSocketShard.js","path":"lib/client/ws"}}],"meta":{"line":14,"file":"WebSocketShard.js","path":"lib/client/ws"}},{"name":"CamelliaError","description":"A generic error from the library.","extends":[[["Error"]]],"access":"private","methods":[{"name":"throw","description":"Returns a functional instance of the error.","scope":"static","returns":[[["CamelliaError"]]],"meta":{"line":27,"file":"CamelliaError.js","path":"lib/errors"}}],"meta":{"line":9,"file":"CamelliaError.js","path":"lib/errors"}},{"name":"DiscordAPIError","description":"Represents an error from the Discord Gateway.","extends":[[["Error"]]],"access":"private","meta":{"line":7,"file":"DiscordAPIError.js","path":"lib/errors"}},{"name":"RequestError","description":"Represents a HTTP error from a request.","extends":[[["Error"]]],"access":"private","props":[{"name":"name","description":"The name of the error","type":[[["string"]]],"meta":{"line":14,"file":"RequestError.js","path":"lib/errors"}},{"name":"code","description":"The HTTP Error status code.","type":[[["number"]]],"meta":{"line":20,"file":"RequestError.js","path":"lib/errors"}},{"name":"method","description":"The HTTP request method used.","type":[[["string"]]],"meta":{"line":26,"file":"RequestError.js","path":"lib/errors"}},{"name":"path","description":"The path of the request, as relative to the default HTTP url.","type":[[["string"]]],"meta":{"line":32,"file":"RequestError.js","path":"lib/errors"}}],"meta":{"line":7,"file":"RequestError.js","path":"lib/errors"}},{"name":"WebSocketError","description":"Represents an error from the WebSocket.","extends":[[["CamelliaError"]]],"access":"private","meta":{"line":9,"file":"WebSocketError.js","path":"lib/errors"}},{"name":"Base","description":"The basic data model that can be identified by an ID, or a snowflake.","access":"private","props":[{"name":"client","description":"The client that created this","type":[[["Client"]]],"meta":{"line":13,"file":"Base.js","path":"lib/structures"}}],"methods":[{"name":"_update","description":"Properly assign data to the structure.","access":"private","params":[{"name":"data","type":[[["Object"]]]}],"async":true,"meta":{"line":21,"file":"Base.js","path":"lib/structures"}},{"name":"_fetch","description":"The data to fetch over the HTTP server.","scope":"static","access":"private","params":[{"name":"id","description":"The ID to fetch by","default":0,"type":[[["Snowflake"]]]}],"async":true,"returns":[[["Object"]]],"meta":{"line":31,"file":"Base.js","path":"lib/structures"}}],"meta":{"line":8,"file":"Base.js","path":"lib/structures"}},{"name":"Channel","description":"A basic channel of any type.","extends":[[["Base"]]],"props":[{"name":"id","description":"The ID of the channel.","type":[[["Snowflake"]]],"meta":{"line":27,"file":"Channel.js","path":"lib/structures"}},{"name":"name","description":"The name of the channel.","type":[[["string"]]],"meta":{"line":33,"file":"Channel.js","path":"lib/structures"}},{"name":"type","description":"The type of the channel.","type":[[["ChannelType"]]],"meta":{"line":39,"file":"Channel.js","path":"lib/structures"}},{"name":"deleted","description":"Whether or not this channel is deleted.","type":[[["boolean"]]],"meta":{"line":45,"file":"Channel.js","path":"lib/structures"}},{"name":"created","description":"The timestamp this channel was created at.","type":[[["number"]]],"meta":{"line":52,"file":"Channel.js","path":"lib/structures"}},{"name":"client","description":"The client that created this","type":[[["Client"]]],"meta":{"line":13,"file":"Base.js","path":"lib/structures"}}],"methods":[{"name":"_update","description":"Properly assign data to the structure.","access":"private","inherits":"Base#_update","inherited":true,"params":[{"name":"data","type":[[["Object"]]]}],"async":true,"meta":{"line":21,"file":"Base.js","path":"lib/structures"}}],"meta":{"line":20,"file":"Channel.js","path":"lib/structures"}},{"name":"Embed","description":"A structured representation of an embed inside of a message.","construct":{"name":"Embed","params":[{"name":"data","description":"The object or embed to copy.","type":[[["Object"]],[["Embed"]]]},{"name":"skipValidation","description":"Whether or not to validate the embed or not.","optional":true,"default":true,"nullable":true,"type":[[["boolean"]]]}]},"props":[{"name":"title","description":"The title of this embed","nullable":true,"type":[[["string"]]],"meta":{"line":32,"file":"Embed.js","path":"lib/structures"}},{"name":"type","description":"The type of this embed, either:\r* `rich` - a rich embed\r* `image` - an image embed\r* `video` - a video embed\r* `gifv` - a gifv embed\r* `article` - an article embed\r* `link` - a link embed","type":[[["string"]]],"meta":{"line":44,"file":"Embed.js","path":"lib/structures"}},{"name":"description","description":"The description of this embed","nullable":true,"type":[[["string"]]],"meta":{"line":50,"file":"Embed.js","path":"lib/structures"}},{"name":"url","description":"The url to this embed, clickable in the title.","nullable":true,"type":[[["string"]]],"meta":{"line":56,"file":"Embed.js","path":"lib/structures"}},{"name":"timestamp","description":"The timestamp for this embed.","nullable":true,"type":[[["number"]]],"meta":{"line":62,"file":"Embed.js","path":"lib/structures"}},{"name":"color","description":"The color of this embed.","nullable":true,"type":[[["ColorResolvable"]]],"meta":{"line":68,"file":"Embed.js","path":"lib/structures"}},{"name":"footer","description":"The footer of this embed.","nullable":true,"type":[[["EmbedFooter"]]],"meta":{"line":82,"file":"Embed.js","path":"lib/structures"}},{"name":"image","description":"The image of this embed.","nullable":true,"type":[[["EmbedImage"]]],"meta":{"line":101,"file":"Embed.js","path":"lib/structures"}},{"name":"thumbnail","description":"The thumbnail of this embed.","nullable":true,"type":[[["EmbedThumbnail"]]],"meta":{"line":121,"file":"Embed.js","path":"lib/structures"}},{"name":"video","description":"The video of this embed.","nullable":true,"type":[[["EmbedVideo"]]],"meta":{"line":140,"file":"Embed.js","path":"lib/structures"}},{"name":"provider","description":"The provider of this embed.","access":"private","nullable":true,"type":[[["EmbedProvider"]]],"meta":{"line":159,"file":"Embed.js","path":"lib/structures"}},{"name":"author","description":"The author of this embed.","nullable":true,"type":[[["EmbedAuthor"]]],"meta":{"line":177,"file":"Embed.js","path":"lib/structures"}},{"name":"fields","description":"The fields of the embed.","nullable":true,"type":[[["Array","<"],["EmbedField",">"]]],"meta":{"line":188,"file":"Embed.js","path":"lib/structures"}}],"methods":[{"name":"setup","description":"Sets up the embed.","access":"private","params":[{"name":"data","description":"The embed data.","type":[["*"]]},{"name":"skipValidation","description":"Whether or not to skip the validation process, or not.","type":[["*"]]}],"meta":{"line":27,"file":"Embed.js","path":"lib/structures"}},{"name":"set","description":"Sets a parameter of an embed, validating it right afterwards.","params":[{"name":"key","description":"The key of the embed to edit.","type":[["*"]]},{"name":"data","description":"The data to set in the embed.","type":[["*"]]}],"returns":[[["null"]],[["Embed"]]],"meta":{"line":200,"file":"Embed.js","path":"lib/structures"}},{"name":"validate","description":"Properly validates an embed, and throws an error on invalid data.","scope":"static","params":[{"name":"embed","description":"The embed to verify.","type":[[["Embed"]]]}],"returns":[[["boolean"]]],"meta":{"line":236,"file":"Embed.js","path":"lib/structures"}},{"name":"normalizeField","description":"Normalizes a field, and throws a {@link CamelliaError} if a field is invalid.","scope":"static","params":[{"name":"name","description":"The name of the field.","type":[["*"]]},{"name":"value","description":"The value of the field.","type":[["*"]]},{"name":"inline","description":"Whether or not the field will be displayed inline or not.","optional":true,"default":false,"type":[["*"]]}],"returns":[[["EmbedField"]]],"meta":{"line":284,"file":"Embed.js","path":"lib/structures"}},{"name":"normalizeFields","description":"Normalizes an array of fields.","scope":"static","params":[{"name":"fields","description":"An array of fields.","type":[[["Array","<"],["EmbedField",">"]]]}],"returns":[[["null"]],[["Array","<"],["EmbedField",">"]]],"meta":{"line":296,"file":"Embed.js","path":"lib/structures"}}],"meta":{"line":16,"file":"Embed.js","path":"lib/structures"}},{"name":"Guild","description":"A guild, or a server.","extends":[[["Base"]]],"props":[{"name":"id","description":"The ID of this guild","type":[[["Snowflake"]]],"meta":{"line":16,"file":"Guild.js","path":"lib/structures"}},{"name":"available","description":"Whether or not the guild is available to be accessed, or not.","type":[[["boolean"]]],"meta":{"line":22,"file":"Guild.js","path":"lib/structures"}},{"name":"name","description":"The name of the guild.","type":[[["string"]]],"meta":{"line":37,"file":"Guild.js","path":"lib/structures"}},{"name":"icon","description":"The icon hash of the guild.","nullable":true,"type":[[["string"]]],"meta":{"line":43,"file":"Guild.js","path":"lib/structures"}},{"name":"created","description":"The timestamp this guild was created at.","type":[[["number"]]],"meta":{"line":50,"file":"Guild.js","path":"lib/structures"}},{"name":"client","description":"The client that created this","type":[[["Client"]]],"meta":{"line":13,"file":"Base.js","path":"lib/structures"}}],"methods":[{"name":"_update","description":"Properly assign data to the structure.","access":"private","inherits":"Base#_update","inherited":true,"params":[{"name":"data","type":[[["Object"]]]}],"async":true,"meta":{"line":21,"file":"Base.js","path":"lib/structures"}}],"meta":{"line":9,"file":"Guild.js","path":"lib/structures"}},{"name":"GuildChannel","description":"A chanmel in a guild.","extends":[[["Channel"]]],"props":[{"name":"guild","description":"The guild this channel belongs to.","type":[[["Guild"]]],"meta":{"line":16,"file":"GuildChannel.js","path":"lib/structures"}},{"name":"id","description":"The ID of the channel.","type":[[["Snowflake"]]],"meta":{"line":27,"file":"Channel.js","path":"lib/structures"}},{"name":"name","description":"The name of the channel.","type":[[["string"]]],"meta":{"line":33,"file":"Channel.js","path":"lib/structures"}},{"name":"type","description":"The type of the channel.","type":[[["ChannelType"]]],"meta":{"line":39,"file":"Channel.js","path":"lib/structures"}},{"name":"deleted","description":"Whether or not this channel is deleted.","type":[[["boolean"]]],"meta":{"line":45,"file":"Channel.js","path":"lib/structures"}},{"name":"created","description":"The timestamp this channel was created at.","type":[[["number"]]],"meta":{"line":52,"file":"Channel.js","path":"lib/structures"}},{"name":"client","description":"The client that created this","type":[[["Client"]]],"meta":{"line":13,"file":"Base.js","path":"lib/structures"}}],"methods":[{"name":"_update","description":"Properly assign data to the structure.","access":"private","inherits":"Base#_update","inherited":true,"params":[{"name":"data","type":[[["Object"]]]}],"async":true,"meta":{"line":21,"file":"Base.js","path":"lib/structures"}}],"meta":{"line":9,"file":"GuildChannel.js","path":"lib/structures"}},{"name":"Message","description":"A message sent from a discord user.","extends":[[["Base"]]],"props":[{"name":"id","description":"The ID of the message.","type":[[["Snowflake"]]],"meta":{"line":36,"file":"Message.js","path":"lib/structures"}},{"name":"type","description":"The type of message.","type":[[["MessageType"]]],"meta":{"line":42,"file":"Message.js","path":"lib/structures"}},{"name":"content","description":"The content of the message","type":[[["string"]]],"meta":{"line":48,"file":"Message.js","path":"lib/structures"}},{"name":"author","description":"The author of this message.","type":[[["Webhook"]],[["User"]]],"meta":{"line":59,"file":"Message.js","path":"lib/structures"}},{"name":"guild","description":"The guild this message was sent in.","type":[[["Guild"]]],"meta":{"line":64,"file":"Message.js","path":"lib/structures"}},{"name":"channel","description":"The channel this message was sent in.","type":[[["Channel"]]],"meta":{"line":70,"file":"Message.js","path":"lib/structures"}},{"name":"created","description":"The timestamp this message was created at.","type":[[["number"]]],"meta":{"line":77,"file":"Message.js","path":"lib/structures"}},{"name":"client","description":"The client that created this","type":[[["Client"]]],"meta":{"line":13,"file":"Base.js","path":"lib/structures"}}],"methods":[{"name":"_update","description":"Properly assign data to the structure.","access":"private","inherits":"Base#_update","inherited":true,"params":[{"name":"data","type":[[["Object"]]]}],"async":true,"meta":{"line":21,"file":"Base.js","path":"lib/structures"}},{"name":"format","description":"Formats a resolvable message to be sent out to discord.","scope":"static","params":[{"name":"content","type":[[["string"]],[["Object"]]]},{"name":"webhook","description":"Whether or not this message should be sent by discord, or not.","optional":true,"default":false,"type":[[["boolean"]]]}],"returns":[[["MessageResolvable"]]],"meta":{"line":100,"file":"Message.js","path":"lib/structures"}}],"meta":{"line":29,"file":"Message.js","path":"lib/structures"}},{"name":"TextChannel","description":"A normal text channel, found in a {@link Guild}.","extends":[[["GuildChannel"]]],"props":[{"name":"guild","description":"The guild this channel belongs to.","type":[[["Guild"]]],"meta":{"line":16,"file":"GuildChannel.js","path":"lib/structures"}},{"name":"id","description":"The ID of the channel.","type":[[["Snowflake"]]],"meta":{"line":27,"file":"Channel.js","path":"lib/structures"}},{"name":"name","description":"The name of the channel.","type":[[["string"]]],"meta":{"line":33,"file":"Channel.js","path":"lib/structures"}},{"name":"type","description":"The type of the channel.","type":[[["ChannelType"]]],"meta":{"line":39,"file":"Channel.js","path":"lib/structures"}},{"name":"deleted","description":"Whether or not this channel is deleted.","type":[[["boolean"]]],"meta":{"line":45,"file":"Channel.js","path":"lib/structures"}},{"name":"created","description":"The timestamp this channel was created at.","type":[[["number"]]],"meta":{"line":52,"file":"Channel.js","path":"lib/structures"}},{"name":"client","description":"The client that created this","type":[[["Client"]]],"meta":{"line":13,"file":"Base.js","path":"lib/structures"}}],"methods":[{"name":"send","description":"The method to send a message to the desired guild channel.","params":[{"name":"content","description":"The content of the message.","type":[[["MessageResolvable"]]]},{"name":"tts","description":"Whether or not to sent the message as tts, or not.","default":false,"type":[[["boolean"]]]}],"async":true,"returns":[[["Message"]]],"meta":{"line":22,"file":"TextChannel.js","path":"lib/structures"}},{"name":"_update","description":"Properly assign data to the structure.","access":"private","inherits":"Base#_update","inherited":true,"params":[{"name":"data","type":[[["Object"]]]}],"async":true,"meta":{"line":21,"file":"Base.js","path":"lib/structures"}}],"meta":{"line":12,"file":"TextChannel.js","path":"lib/structures"}},{"name":"Enum","description":"An enumeration, or a set of named constants with underlying integer types.\rTypes are accessed by keys, and are statically bound to numbers.","see":["https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/enum"],"construct":{"name":"Enum","params":[{"name":"data","description":"The data of keys to assign.","type":[[["Object"]],[["Array","<"],["string",">"]]]},{"name":"options","description":"Enumerator options.","nullable":true,"type":[[["EnumOptions"]]]}]},"props":[{"name":"data","description":"The base data used for enumeration.","type":[[["Object"]],[["Array","<"],["*",">"]]],"meta":{"line":19,"file":"Enum.js","path":"lib/structures/typedefs"}},{"name":"options","description":"The options for this enumerator.","type":[[["EnumOptions"]]],"meta":{"line":33,"file":"Enum.js","path":"lib/structures/typedefs"}}],"methods":[{"name":"get","description":"Gets the value of a set constant.","params":[{"name":"key","description":"The key, or Number to get by.","type":[[["string"]],[["number"]]]}],"meta":{"line":46,"file":"Enum.js","path":"lib/structures/typedefs"}},{"name":"key","description":"Gets a key of a value.","params":[{"name":"key","description":"The key, or Number to get by.","type":[[["string"]],[["number"]]]}],"meta":{"line":55,"file":"Enum.js","path":"lib/structures/typedefs"}},{"name":"_construct","description":"Constructs the enumerator, and sets all the keys attached to it.","access":"private","params":[{"name":"data","description":"The data to enumerate by.","type":[[["Object"]],[["Array","<"],["string",">"]]]}],"meta":{"line":65,"file":"Enum.js","path":"lib/structures/typedefs"}}],"meta":{"line":14,"file":"Enum.js","path":"lib/structures/typedefs"}},{"name":"Snowflake","description":"A snowflake, or Twitter's ID system.","methods":[{"name":"deconstruct","description":"Deconstructs a snowflake from Discord.","scope":"static","params":[{"name":"snowflake","description":"A snowflake.","type":[[["Snowflake"]]]}],"meta":{"line":33,"file":"Snowflake.js","path":"lib/structures/typedefs"}}],"meta":{"line":11,"file":"Snowflake.js","path":"lib/structures/typedefs"}},{"name":"User","description":"A generic user, as found on discord.","extends":[[["Base"]]],"props":[{"name":"id","description":"The ID of the user.","type":[[["Snowflake"]]],"meta":{"line":17,"file":"User.js","path":"lib/structures"}},{"name":"username","description":"The username of the user.","type":[[["string"]]],"meta":{"line":23,"file":"User.js","path":"lib/structures"}},{"name":"discriminator","description":"The discriminator of the user.","type":[[["number"]]],"meta":{"line":29,"file":"User.js","path":"lib/structures"}},{"name":"avatar","description":"The avatar hash of the user.","type":[[["string"]]],"meta":{"line":35,"file":"User.js","path":"lib/structures"}},{"name":"bot","description":"Whether or not this user is a bot, or not.","type":[[["boolean"]]],"meta":{"line":41,"file":"User.js","path":"lib/structures"}},{"name":"created","description":"The timestamp this user was created at.","type":[[["number"]]],"meta":{"line":51,"file":"User.js","path":"lib/structures"}},{"name":"client","description":"The client that created this","type":[[["Client"]]],"meta":{"line":13,"file":"Base.js","path":"lib/structures"}}],"methods":[{"name":"_update","description":"Properly assign data to the structure.","access":"private","inherits":"Base#_update","inherited":true,"params":[{"name":"data","type":[[["Object"]]]}],"async":true,"meta":{"line":21,"file":"Base.js","path":"lib/structures"}}],"meta":{"line":10,"file":"User.js","path":"lib/structures"}},{"name":"Webhook","description":"A webhook, used to send data or messages to Discord without needing a bot account.","extends":[[["Base"]]],"props":[{"name":"id","description":"The ID of the webhook.","type":[[["number"]]],"meta":{"line":19,"file":"Webhook.js","path":"lib/structures"}},{"name":"type","description":"The type of webhook.","type":[[["WebhookType"]]],"meta":{"line":25,"file":"Webhook.js","path":"lib/structures"}},{"name":"token","description":"The token belonging to this webbook.","nullable":true,"type":[[["string"]]],"meta":{"line":30,"file":"Webhook.js","path":"lib/structures"}},{"name":"created","description":"The timestamp this webhook was created at.","type":[[["number"]]],"meta":{"line":45,"file":"Webhook.js","path":"lib/structures"}},{"name":"client","description":"The client that created this","type":[[["Client"]]],"meta":{"line":13,"file":"Base.js","path":"lib/structures"}}],"methods":[{"name":"_update","description":"Properly assign data to the structure.","access":"private","inherits":"Base#_update","inherited":true,"params":[{"name":"data","type":[[["Object"]]]}],"async":true,"meta":{"line":21,"file":"Base.js","path":"lib/structures"}}],"meta":{"line":12,"file":"Webhook.js","path":"lib/structures"}},{"name":"Manager","description":"A collection, edited to work properly as a cache for API objects.","extends":[[["Collection"]]],"props":[{"name":"client","description":"The client that created this collection.","type":[[["Client"]]],"meta":{"line":15,"file":"Manager.js","path":"lib/util"}},{"name":"iterable","description":"An item that can be iterated upon, and be used as a filter for unwanted objects.","type":[["*"]],"meta":{"line":16,"file":"Collection.js","path":"lib/util"}}],"methods":[{"name":"fetch","description":"A function to fetch, and cache an object.","params":[{"name":"id","description":"The ID of the object to fetch","type":[[["number"]]]},{"name":"cache","description":"Whether or not to cache the returned item or not.","optional":true,"default":true,"type":[[["boolean"]]]}],"async":true,"returns":[[["null"]],["*"]],"meta":{"line":24,"file":"Manager.js","path":"lib/util"}},{"name":"add","description":"Add a new item to the collection.","inherits":"Collection#add","inherited":true,"params":[{"name":"obj","description":"The object/item to add.","type":[["*"]]}],"returns":{"types":[["*"]],"description":"Returns the newly added object."},"meta":{"line":24,"file":"Collection.js","path":"lib/util"}},{"name":"find","description":"Finds an item in the collection by function.","inherits":"Collection#find","inherited":true,"params":[{"name":"fn","type":[[["function"]]]}],"returns":{"types":[[["Object"]]],"description":"Returns the found item.","nullable":true},"meta":{"line":48,"file":"Collection.js","path":"lib/util"}},{"name":"filter","description":"Filters the collection by a function to get items.","inherits":"Collection#filter","inherited":true,"params":[{"name":"fn","type":[[["function"]]]}],"returns":{"types":[[["Array","<?"],["Object",">"]]],"description":"Returns the filtered items."},"meta":{"line":61,"file":"Collection.js","path":"lib/util"}},{"name":"first","description":"Returns the first item in the collection.","inherits":"Collection#first","inherited":true,"returns":{"types":[[["Object"]]],"description":"Returns the found item.","nullable":true},"meta":{"line":75,"file":"Collection.js","path":"lib/util"}},{"name":"remove","description":"Removes an object from the collection.","inherits":"Collection#remove","inherited":true,"params":[{"name":"item","description":"The item, whether by its ID or the object itself.","type":[[["number"]],[["Object"]]]}],"meta":{"line":83,"file":"Collection.js","path":"lib/util"}},{"name":"toJSON","description":"Returns the collection as an object.","inherits":"Collection#toJSON","inherited":true,"returns":{"types":[["*"]],"description":"The object resulting from the collection."},"meta":{"line":96,"file":"Collection.js","path":"lib/util"}}],"meta":{"line":8,"file":"Manager.js","path":"lib/util"}},{"name":"Collection","description":"A collection of things, or values assigned to keys.","extends":[[["Map"]]],"construct":{"name":"Collection","params":[{"name":"iterable","description":"A class to have items be set as in order to be accepted.","type":[["*"]]}]},"props":[{"name":"iterable","description":"An item that can be iterated upon, and be used as a filter for unwanted objects.","type":[["*"]],"meta":{"line":16,"file":"Collection.js","path":"lib/util"}}],"methods":[{"name":"add","description":"Add a new item to the collection.","params":[{"name":"obj","description":"The object/item to add.","type":[["*"]]}],"returns":{"types":[["*"]],"description":"Returns the newly added object."},"meta":{"line":24,"file":"Collection.js","path":"lib/util"}},{"name":"find","description":"Finds an item in the collection by function.","params":[{"name":"fn","type":[[["function"]]]}],"returns":{"types":[[["Object"]]],"description":"Returns the found item.","nullable":true},"meta":{"line":48,"file":"Collection.js","path":"lib/util"}},{"name":"filter","description":"Filters the collection by a function to get items.","params":[{"name":"fn","type":[[["function"]]]}],"returns":{"types":[[["Array","<?"],["Object",">"]]],"description":"Returns the filtered items."},"meta":{"line":61,"file":"Collection.js","path":"lib/util"}},{"name":"first","description":"Returns the first item in the collection.","returns":{"types":[[["Object"]]],"description":"Returns the found item.","nullable":true},"meta":{"line":75,"file":"Collection.js","path":"lib/util"}},{"name":"remove","description":"Removes an object from the collection.","params":[{"name":"item","description":"The item, whether by its ID or the object itself.","type":[[["number"]],[["Object"]]]}],"meta":{"line":83,"file":"Collection.js","path":"lib/util"}},{"name":"toJSON","description":"Returns the collection as an object.","returns":{"types":[["*"]],"description":"The object resulting from the collection."},"meta":{"line":96,"file":"Collection.js","path":"lib/util"}}],"meta":{"line":9,"file":"Collection.js","path":"lib/util"}},{"name":"Util","description":"A utility class for all the utilities necessary for general purposes.","methods":[{"name":"mergeObjects","description":"Function to merge two objects with eachother, and replace the values of the first with the second.","scope":"static","params":[{"name":"object","description":"The base object.","type":[[["Object"]]]},{"name":"merge","description":"The object to merge with the base object.","type":[[["Object"]]]}],"returns":[[["Object"]]],"meta":{"line":16,"file":"Util.js","path":"lib/util"}},{"name":"compareObjects","description":"Compares two objects, and the differences between them.","scope":"static","params":[{"name":"object","description":"The base object.","type":[[["Object"]]]},{"name":"merge","description":"The object to compare between.","type":[[["Object"]]]}],"returns":[[["Array"]]],"meta":{"line":38,"file":"Util.js","path":"lib/util"}},{"name":"mirror","description":"Mirrors an array into an object, with the value being the same as the keys.","scope":"static","params":[{"name":"keys","description":"The keys to mirror and copy.","type":[["*"]]}],"meta":{"line":57,"file":"Util.js","path":"lib/util"}},{"name":"resolveColor","description":"Resolves a resolvable color into an actual color.","scope":"static","params":[{"name":"color","description":"A color that can be resolved.","type":[[["ColorResolvable"]]]}],"returns":[[["number"]]],"meta":{"line":76,"file":"Util.js","path":"lib/util"}},{"name":"delay","description":"Creates a Promise that resolves after a certain timeframe.","scope":"static","params":[{"name":"ms","description":"How long to wait before resolving in milliseconds.","type":[[["number"]]]}],"returns":[[["Promise","<"],["null",">"]]],"meta":{"line":93,"file":"Util.js","path":"lib/util"}},{"name":"readBytes","description":"Reads bytes at a specific amount from a given Buffer.","scope":"static","params":[{"name":"buffer","description":"The buffer to read from.","type":[[["Buffer"]]]},{"name":"first","description":"The fist index to start at.","type":[[["number"]]]},{"name":"last","description":"The last index to end with.","optional":true,"default":"buffer.length - 1","type":[[["number"]]]}],"returns":[[["Array","<"],["number",">"]]],"meta":{"line":106,"file":"Util.js","path":"lib/util"}},{"name":"binarify","description":"Changes a snowflake into a binary string.","see":["https://github.com/discordjs/discord.js/blob/master/src/util/Util.js#L497"],"scope":"static","access":"private","params":[{"name":"num","description":"A snowflake.","type":[[["Snowflake"]]]}],"returns":[[["string"]]],"meta":{"line":126,"file":"Util.js","path":"lib/util"}},{"name":"compareBytes","description":"Compares an array of bytes with another.","scope":"static","params":[{"name":"bytes","description":"The bytes to start with.","type":[[["Array","<"],["number",">"]]]},{"name":"compare","description":"The other bytes to compare against","type":[[["Array","<"],["number",">"]]]}],"returns":[[["boolean"]]],"meta":{"line":147,"file":"Util.js","path":"lib/util"}},{"name":"isJSON","description":"Checks if a string is valid JSON or not.","scope":"static","params":[{"name":"json","description":"The string to parse.","type":[[["string"]]]}],"returns":[[["boolean"]]],"meta":{"line":156,"file":"Util.js","path":"lib/util"}}],"meta":{"line":6,"file":"Util.js","path":"lib/util"}}],"interfaces":[],"typedefs":[{"name":"Response","description":"Response data to send.","access":"private","type":[[["object"]]],"props":[{"name":"status","description":"The status code to end with","type":[[["number"]]]},{"name":"message","description":"The message to end with, if any.","nullable":true,"type":[[["string"]]]},{"name":"data","description":"The data to send to the client, if any.","nullable":true,"type":[[["object"]]]}],"meta":{"line":113,"file":"WebhookReciever.js","path":"lib/client/webhook"}},{"name":"RecieverMessage","description":"A message from the webhook reciever.","type":[[["object"]]],"props":[{"name":"message","description":"The message from a request.","type":[[["string"]]]},{"name":"data","description":"Any extra data willingly sent from the request","nullable":true,"type":[[["object"]]]}],"meta":{"line":61,"file":"WebhookClient.js","path":"lib/client"}},{"name":"Endpoints","description":"All of the provided enpoints in the Discord API.","type":[[["Object"]]],"meta":{"line":1,"file":"Endpoints.js","path":"lib/rest"}},{"name":"ChannelType","description":"The available type of the channels.\r* `GUILD_TEXT: 0` - a guild text channel\r* `DM: 1` - a direct message channel\r* `GUILD_VOICE: 2` - a guild voice channel\r* `GROUP_DM: 3` - a group dm channel\r* `GUILD_CATEGORY: 4` - a guild category channel\r* `GUILD_NEWS: 5` - a guild news channel\r* `GUILD_STORE: 6` - a guild store channel","type":[[["Enum"]]],"meta":{"line":71,"file":"Channel.js","path":"lib/structures"}},{"name":"EmbedFooter","description":"The footer of an embed.","type":[[["object"]]],"props":[{"name":"text","description":"The text in the footer.","type":[[["string"]]]},{"name":"icon_url","description":"The icon of the footer, in `https://` url format.","nullable":true,"type":[[["string"]]]},{"name":"proxy_icon_url","description":"A proxied url of the icon.","nullable":true,"type":[[["string"]]]}],"meta":{"line":70,"file":"Embed.js","path":"lib/structures"}},{"name":"EmbedImage","description":"An image to display within an embed.","type":[[["Object"]]],"props":[{"name":"url","description":"The url of the image, in `https://` url format.","nullable":true,"type":[[["string"]]]},{"name":"proxy_url","description":"A proxied url of the image.","nullable":true,"type":[[["string"]]]},{"name":"height","description":"The height of the image to display it at","nullable":true,"type":[[["number"]]]},{"name":"width","description":"The width of the image to display it at","nullable":true,"type":[[["number"]]]}],"meta":{"line":88,"file":"Embed.js","path":"lib/structures"}},{"name":"EmbedThumbnail","description":"A thumbnail to display within an embed.","type":[[["Object"]]],"props":[{"name":"url","description":"The url of the thumbnail, in `https://` url format.","nullable":true,"type":[[["string"]]]},{"name":"proxy_url","description":"A proxied url of the thumbnail.","nullable":true,"type":[[["string"]]]},{"name":"height","description":"The height of the thumbnail to display it at","nullable":true,"type":[[["number"]]]},{"name":"width","description":"The width of the thumbnail to display it at","nullable":true,"type":[[["number"]]]}],"meta":{"line":108,"file":"Embed.js","path":"lib/structures"}},{"name":"EmbedVideo","description":"A video within an embed.","type":[[["Object"]]],"props":[{"name":"url","description":"The URL of the video.","nullable":true,"type":[[["string"]]]},{"name":"height","description":"The height of the video to display it at","nullable":true,"type":[[["number"]]]},{"name":"width","description":"The width of the video to display it at","nullable":true,"type":[[["number"]]]}],"meta":{"line":128,"file":"Embed.js","path":"lib/structures"}},{"name":"EmbedProvider","description":"A provider that provided the data in the embed. Usually internal, and cannot be set by normal users.","access":"private","type":[[["Object"]]],"props":[{"name":"name","description":"The name of the provider.","nullable":true,"type":[[["string"]]]},{"name":"url","description":"The URL of the provider.","nullable":true,"type":[[["string"]]]}],"meta":{"line":146,"file":"Embed.js","path":"lib/structures"}},{"name":"EmbedAuthor","description":"The author of an embed.","type":[[["Object"]]],"props":[{"name":"name","description":"The name of the author.","nullable":true,"type":[[["string"]]]},{"name":"url","description":"The url of the author.","nullable":true,"type":[[["string"]]]},{"name":"icon_url","description":"The avatar/icon of the author.","nullable":true,"type":[[["string"]]]},{"name":"proxy_icon_url","description":"The proxied avatar/icon of the author.","nullable":true,"type":[[["string"]]]}],"meta":{"line":164,"file":"Embed.js","path":"lib/structures"}},{"name":"EmbedField","description":"A field within an embed.","type":[[["object"]]],"props":[{"name":"name","description":"The name of this field","type":[[["string"]]]},{"name":"value","description":"The value of this field","type":[[["string"]]]},{"name":"inline","description":"Whether or not the field will be displayed inline or not.","optional":true,"type":[[["boolean"]]]}],"meta":{"line":270,"file":"Embed.js","path":"lib/structures"}},{"name":"MessageResolvable","description":"A string or an object that can resolve as a proper message. This can be:\r* a string\r* an {@link Embed}\r* an object\r  * The contents of such can be:\r  * `content.content` The content to send, or the message itself.\r  * `content.tts` Whether or not the message should send as TTS or not.\r  * `content.embed` An embed to send with the message.\r* an array of strings (of which will be joined with `\\n`)","type":[[["string"]],[["Embed"]],[["Object"]],[["Array","<"],["string",">"]]],"meta":{"line":81,"file":"Message.js","path":"lib/structures"}},{"name":"MessageType","description":"The types of messages available. A majority of these are system messages, but are still a message type nonetheless.\r* `DEFAULT` - The basic message, as everyone would send.\r* `RECIPIENT_ADD` - Sent whenever a new member gets added to a message group.\r* `RECIPIENT_REMOVE` - Sent whenever a member gets removed from a message group.\r* `CALL` - Sent whenever a call starts.\r* `CHANNEL_NAME_CHANGE` - Sent whenever the name of a message group changes.\r* `CHANNEL_ICON_CHANGE` - Sent whenever the icon of a message group changes.\r* `CHANNEL_PINNED_MESSAGE` - Sent whenever a message gets pinned\r* `GUILD_MEMBER_JOIN` - Sent whenever a member joins a server.\r* `USER_PREMIUM_GUILD_SUBSCRIPTION` - Sent whenever a member boosts a server.\r* `USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_1` - Sent whenever a member boosts a server, and it unlocks tier 1 as a result.\r* `USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_2` - Sent whenever a member boosts a server, and it unlocks tier 2 as a result.\r* `USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_3` - Sent whenever a member boosts a server, and it unlocks tier 3 as a result.\r* `CHANNEL_FOLLOW_ADD` - Sent whenever an news channel gets followed, and the channel the message gets sent is in redirects to it.\r* `GUILD_DISCOVERY_DISQUALIFIED` - Sent whenever a server gets disqualified from server discovery.\r* `GUILD_DISCOVERY_REQUALIFIED` - Sent whenever a server becomes qualified for server discovery.","type":[[["Enum"]]],"meta":{"line":134,"file":"Message.js","path":"lib/structures"}},{"name":"EnumOptions","description":"The options for an enumerator.","access":"private","type":[[["Object"]]],"props":[{"name":"startfrom","description":"The number to start from.","optional":true,"default":0,"type":[[["number"]]]},{"name":"multiplier","description":"The multiplier, for things like flags (2).","optional":true,"default":1,"type":[[["number"]]]}],"meta":{"line":21,"file":"Enum.js","path":"lib/structures/typedefs"}},{"name":"Snowflake","description":"A snowflake, or a machine-generated ID created by Twitter. A snowflake is constructed by a worker, using an timestamp in millisecond format since an epoch.\rThe epoch being the start date of all ID's, in Discord's case being `2015-01-01T00:00:00.000Z`.\r\rA snowflake can be interpreted in a binary format, consisting of the ms since the epoch, the worker id, the process id, and an increment.\r```\r64                                          22     17     12          0\r 000000111011000111100001101001000101000000  00001  00000  000000000000\r      number of ms since Discord epoch       worker  pid    increment\r```","see":["https://discord.com/developers/docs/reference#snowflakes"],"type":[[["string"]]],"meta":{"line":15,"file":"Snowflake.js","path":"lib/structures/typedefs"}},{"name":"WebhookType","description":"The types of webhooks available.\r* `INCOMING: 1` - A webhook that posts messages to a channel with a token.\r* `CHANNEL_FOLLOWER: 2` - An internal webhook that posts images from a channel that another channel is following.","type":[[["Enum"]]],"meta":{"line":58,"file":"Webhook.js","path":"lib/structures"}},{"name":"ClientOptions","description":"All of the default bot client options.","type":[[["Object"]]],"props":[{"name":"shards","description":"How many shards that should be spawned.","optional":true,"default":"auto","type":[[["string"]],[["number"]]]},{"name":"disableEveryone","description":"Whether to filter out everyone & here mentions or not.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"emitRawData","description":"Whether or not to emit raw gateway data to the client, through the `data` event.","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"ws","description":"Options to send to the WebSocket on connection.","optional":true,"type":[[["WebSocketOptions"]]]},{"name":"rest","description":"Options for the HTTP side of things.","optional":true,"type":[[["RestOptions"]]]}],"meta":{"line":5,"file":"Constants.js","path":"lib/util"}},{"name":"WebSocketOptions","description":"Options to send to the WebSocket on connection.","type":[[["Object"]]],"props":[{"name":"version","description":"The version of the gateway to connect to.","optional":true,"default":6,"type":[[["number"]]]},{"name":"large_threshold","description":"The amount of offline members to be recieved.","optional":true,"default":250,"type":[[["number"]]]}],"meta":{"line":26,"file":"Constants.js","path":"lib/util"}},{"name":"RestOptions","description":"Options for the HTTP side of things.","type":[[["Object"]]],"props":[{"name":"version","description":"The version of the API to connect to.","optional":true,"default":7,"type":[[["number"]]]},{"name":"api","description":"The url of the HTTP API.","optional":true,"default":"https://discord.com/api","type":[[["string"]]]},{"name":"cdn","description":"The url to the Discord CDN.","optional":true,"default":"https://cdn.discordapp.com/","type":[[["string"]]]},{"name":"invite","description":"The url for all invites.","optional":true,"default":"https://discord.gg","type":[[["string"]]]}],"meta":{"line":43,"file":"Constants.js","path":"lib/util"}},{"name":"FilterFunction","description":"A function to filter request data by.\rExpected to return a `boolean`.","access":"private","type":[[["function"]]],"props":[{"name":"reciever","description":"The reciever that handles this filter.","type":[[["WebhookReciever"]]]},{"name":"res","description":"The response to handle.","type":[[["ServerResponse"]]]},{"name":"data","description":"The data sent from a request.","type":[[["RequestData"]]]}],"meta":{"line":59,"file":"Constants.js","path":"lib/util"}},{"name":"RequestData","description":"The data expected from a webhook reciever request.","access":"private","type":[[["object"]]],"props":[{"name":"data","description":"The data from the request.","type":[[["object"]]]},{"name":"headers","description":"The headers of the request.","type":[[["object"]]]}],"meta":{"line":69,"file":"Constants.js","path":"lib/util"}},{"name":"WebhookClientOptions","description":"All of the default {@link WebhookClient} options.","type":[[["Object"]]],"props":[{"name":"enableReciever","description":"Enables a reciever attached to the webhook client.","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"recieverPort","description":"The port for the reciever to listen to, if enabled.","optional":true,"default":9235,"type":[[["number"]]]},{"name":"authentication","description":"Whether or not data sent to the reciever should be authorized or not. Authorization works based off the webhook's token.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"filterData","description":"Filter requests from being properly sent.","optional":true,"type":[[["FilterFunction"]]]}],"meta":{"line":77,"file":"Constants.js","path":"lib/util"}},{"name":"Status","description":"The status of the client, or it's websocket manager.\rAvailable status are as of provided:\r* READY: 0\r* IDLE: 1\r* CONNECTING: 2\r* RECONNECTING: 3\r* AWAITING_GUILDS: 4\r* IDENTIFYING: 5","type":[[["number"]]],"meta":{"line":160,"file":"Constants.js","path":"lib/util"}},{"name":"RoleColors","description":"All of the default role colors provided by Discord, as named approximately by some random website.","see":["http://chir.ag/projects/name-that-color/#FFFFFF"],"type":[[["RoleColors"]]],"meta":{"line":188,"file":"Constants.js","path":"lib/util"}},{"name":"ColorResolvable","description":"A color. Can be a number, a hex string, or an RGB array.","type":[[["string"]],[["number"]],[["Array","<"],["number",">"]]],"meta":{"line":66,"file":"Util.js","path":"lib/util"}}],"externals":[]}